{ config, pkgs, lib, ... }:

{
  imports = [
    ./hardware-configuration.nix # Your hardware scan results (generated by nixos-generate-config)
  ];

  # Bootloader configuration
  # IMPORTANT: Disable systemd-boot as you want GRUB
  boot.loader.systemd-boot.enable = false;

  # Enable GRUB
  boot.loader.grub = {
    enable = true;
    # UEFI support is crucial for Windows 11 dual boot
    efiSupport = true;
    # Tell GRUB where to install its EFI binaries.
    # "nodev" implies installation to the EFI System Partition (ESP) in a UEFI setup,
    # which is the standard and safest approach for dual-booting.
    devices = [ "nodev" ];
    # Use GRUB's theme support which uses the 'linux' module
    use=${pkgs.lib.mkIf (config.boot.loader.grub.theme != null) "linux"};

    # Set the DarkMatter GRUB theme
    # Ensure grub2-themes package is available and theme name is correct
    theme = pkgs.grub2-themes.darkmatter;

    # Enable os-prober to detect other operating systems (like Windows)
    # This is often configured in /etc/default/grub, but can be set here.
    extraGrubConfig = ''
      GRUB_DISABLE_OS_PROBER=false
      # Optionally, you can add a manual Windows entry here if os-prober struggles.
      # Replace 'hd0,gptX' with your actual Windows EFI partition if needed.
      # Use 'sudo fdisk -l' or 'lsblk -f' to find your Windows EFI partition.
      # The UUID can be found with 'sudo blkid /dev/sdXY' for that partition.
      # menuentry "Windows 11 (Manual)" {
      #   insmod part_gpt
      #   insmod fat
      #   insmod search_fs_uuid
      #   insmod chain
      #   search --fs-uuid --no-floppy --set=root YOUR_WINDOWS_EFI_PARTITION_UUID_HERE
      #   chainloader /EFI/Microsoft/Boot/bootmgfw.efi
      # }
    '';
    # Disable cryptodisk if you're not using encrypted partitions with GRUB's direct support
    enableCryptodisk = false;
  };

  # Make sure EFI variables can be touched for bootloader installation
  boot.loader.efi.canTouchEfiVariables = true;

  # Hostname
  networking.hostName = "ASUSROGB550";

  # Kernel modules (ensure amdgpu is loaded early)
  boot.initrd.kernelModules = [ "amdgpu" ];

  # System-wide packages
  environment.systemPackages = with pkgs; [
    # --- Video Playback & Media ---
    mpv
    vlc # Optional, but good general player
    yt-dlp # For downloading/streaming YouTube and other online videos
    ffmpeg-full # Provides comprehensive codec support for all applications

    # --- Desktop Environment & WM Tools ---
    alacritty # Fast, GPU-accelerated terminal (Keeping as an alternative if Kitty has issues)
    rofi      # Popular, versatile application launcher
    feh       # For setting wallpapers
    picom     # Compositor for tear-free experience, transparency, shadows
    dunst     # Lightweight and customizable notification daemon
    pavucontrol # GUI volume mixer for PipeWire/PulseAudio
    kitty     # Preferred terminal emulator

    # --- Theming Tools & Assets ---
    # GTK theming
    adw-gtk3 # Adwaita theme for GTK3 (and GTK2 via adw-gtk3-theme-pkg)
    lxappearance # GTK theme configuration tool (useful for manual adjustment)

    # Qt theming
    adw-qt # Adwaita theme for Qt (basic)
    adw-qt-kvantum # Adwaita theme specifically for Kvantum engine
    kvantum # The Kvantum theme engine itself
    kvantum-manager # GUI tool to configure Kvantum
    qt5ct # Configuration tool for Qt5 applications
    qt6ct # Configuration tool for Qt6 applications

    # Icon Theme
    papirus-icon-theme # A popular, comprehensive dark icon theme

    # Cursor Theme
    bibata-cursors # Bibata Modern Ice cursor theme

    # --- Development Tools ---
    # Docker
    docker # CLI client and daemon
    # JetBrains Rider (IDE for .NET development)
    jetbrains.rider # Automatically pulls the latest stable version
    # VS Code (Visual Studio Code)
    vscode # Microsoft Visual Studio Code
    # .NET SDK
    dotnet-sdk # Installs the latest stable .NET SDK
    # Neovim (Modern Vim editor)
    neovim # Enabled by programs.neovim module, but good to list for clarity
    # Command-line fuzzy finders
    fzf # Command-line fuzzy finder
    yazi # Terminal file manager (requires 'ueberzug' for image previews in X11, see Qtile extraPackages)
    # Zoxide (Smart cd command)
    zoxide # Fast cd command that learns your habits
    # Azure CLI (Microsoft Azure Command-Line Interface)
    azure-cli # Azure management tool
    # Azure Dev CLI (azd)
    azure-dev-cli # For deploying and managing Azure Developer environments

    # --- Additional CLI Tools ---
    bluetui # Bluetooth TUI client
    calcurse # Terminal-based calendar and to-do list
    wiremix # Corrected: Wiremix, the TUI audio mixer for PipeWire
    network-manager-applet # Provides nmtui (NetworkManager Text User Interface) and nm-applet

    # --- General Utilities ---
    wget
    curl
    unzip
    git
    htop # System resource monitor
    neofetch # System information display
    # Add other tools you frequently use here
  ];

  # Global environment variables
  environment.sessionVariables = {
    # Crucial for AMD GPU hardware video acceleration (VA-API)
    LIBVA_DRIVER_NAME = "radeonsi";

    # Standard XDG variables (important for applications to find config, cache, data)
    XDG_CONFIG_HOME = "$HOME/.config";
    XDG_CACHE_HOME = "$HOME/.cache";
    XDG_DATA_HOME = "$HOME/.local/share";
    XDG_STATE_HOME = "$HOME/.local/state";

    # Essential for applications to find Nix-installed icons, .desktop files, themes etc.
    # This path is dynamically built to include all necessary data directories.
    XDG_DATA_DIRS = "${pkgs.lib.makeSearchPath "share" [
      pkgs.gnome.adwaita-icon-theme      # Good default/fallback icon theme
      pkgs.hicolor-icon-theme           # Basic fallback for many icons
      pkgs.papirus-icon-theme           # Your chosen dark icon theme
      pkgs.bibata-cursors.share          # For the cursor theme to be found by apps (though xserver sets it globally)
    ]}:/run/current-system/sw/share:$HOME/.local/share/flatpak/exports/share:$HOME/.local/share/icons";

    # Locale and language settings
    LANG = "en_US.UTF-8";
    LC_ALL = "en_US.UTF-8";
    LANGUAGE = "en_US:en";

    # --- Qt Theming Environment Variables ---
    # Tell Qt applications to use qt5ct/qt6ct as their platform theme
    QT_QPA_PLATFORMTHEME = "qt5ct"; # For Qt5 apps
    QT_QPA_PLATFORMTHEME_QT6 = "qt6ct"; # For Qt6 apps

    # Tell Qt to use the Kvantum style engine (set after Kvantum Manager configuration)
    QT_STYLE_OVERRIDE = "kvantum-dark";
  };

  # Graphics Configuration (AMD)
  hardware.graphics = {
    enable = true;
    enable32Bit = true; # Needed for 32-bit applications (e.g., Steam Proton games)
    extraPackages = with pkgs; [
      mesa # Provides the open-source RadeonSI VA-API/VDPAU drivers
      # amdvlk # Optional: AMD's official Vulkan driver, primarily for gaming
    ];
  };

  # X11 Server Configuration
  services.xserver = {
    enable = true;
    videoDrivers = [ "amdgpu" ]; # Explicitly set AMD GPU driver for Xorg

    # --- Cursor Theme Configuration ---
    # Set the global X11 cursor theme
    pointerCursor = {
      x11.enable = true;
      package = pkgs.bibata-cursors;
      name = "Bibata-Modern-Ice"; # The exact name of the cursor theme provided by the package
    };

    # Enable Qtile Window Manager
    windowManager.qtile = {
      enable = true;
      # Uncomment and set the path if your Qtile config.py is NOT in ~/.config/qtile/config.py
      # configFile = "/home/sk/.config/qtile/config.py";
      # Add any extra Python packages your Qtile config might need
      extraPackages = python3Packages: with python3Packages; [
        # qtile-extras # For additional widgets/features
        psutil       # Often needed for CPU/memory widgets in Qtile
        dbus-python  # If your widgets interact with D-Bus
        xlib         # For lower-level X11 interaction if needed
        cairocffi    # For drawing if your widgets use it
        ueberzug     # For Yazi image previews in X11 (Crucial for Yazi's full functionality)
      ];
    };

    # Display Manager (LightDM is a lightweight option)
    displayManager.lightdm = {
      enable = true;
      greeters.gtk.enable = true;
      greeters.gtk.theme.name = "adw-gtk3-dark"; # Set greeter theme
      # You can set Qtile as the default session if you only use Qtile:
      # defaultSession = lib.mkForce "qtile";
    };
    # Alternatively, if you prefer no display manager and use `startx`:
    # displayManager.setupCommands = ''
    #   exec ${pkgs.xorg.xinit}/bin/xinit ~/.xinitrc
    # '';
  };

  # GTK Theming Configuration
  gtk = {
    enable = true;
    # Global settings for GTK applications
    extraConfig = {
      gtk-application-prefer-dark-theme = true; # Crucial for enabling dark mode
      gtk-theme-name = "adw-gtk3-dark";        # The exact name of your GTK theme
      gtk-icon-theme-name = "Papirus-Dark";   # Your chosen dark icon theme
      gtk-font-name = "Sans 10";              # A common default font for GTK apps
    };
  };

  # D-Bus & Polkit (for authentication dialogues, e.g., NetworkManager, mounting drives)
  services.dbus.enable = true;
  services.polkit.enable = true;
  environment.systemPackages = with pkgs; [
    lxqt.lxqt-policykit # A lightweight polkit agent, start in Qtile autostart
  ];

  # Audio (PipeWire is the modern standard)
  sound.enable = true;
  hardware.pulseaudio.enable = false; # Disable PulseAudio if migrating
  services.pipewire = {
    enable = true;
    alsa.enable = true;
    alsa.support32Bit = true; # For 32-bit applications that use ALSA
    pulse.enable = true; # For PulseAudio compatibility layer (most apps still use Pulse API)
  };

  # Bluetooth service
  services.bluetooth.enable = true;
  services.bluetooth.powerOnBoot = true;
  # Add blueman if you want a GUI Bluetooth manager
  # environment.systemPackages = with pkgs; [ blueman ];

  # NetworkManager service (for network-manager-applet and general network management)
  services.networkmanager.enable = true;

  # Docker service
  virtualisation.docker = {
    enable = true;
    liveRestore = true; # Keep containers running if daemon crashes/restarts
    daemon.settings = {
      log-driver = "json-file"; # Recommended log driver
      log-opts = {
        "max-size" = "10m";
        "max-file" = "3";
      };
    };
  };

  # Enable Neovim as a program (for better NixOS integration)
  programs.neovim = {
    enable = true;
    # You can specify your Neovim configuration here, e.g.:
    # plugins = with pkgs.vimPlugins; [ ];
    # extraConfig = "";
  };

  # Optional: Enable ZSH if you plan to use it as your default shell
  programs.zsh.enable = true;

  # Browser configuration (Chromium is preferred)
  programs.chromium = {
    enable = true;
    # Flags for hardware video acceleration on X11 with AMD
    extraFlags = [
      "--enable-features=VaapiVideoDecoder"
      "--use-gl=egl"
      "--enable-gpu-rasterization"
      "--ignore-gpu-blocklist"
    ];
  };

  # User account configuration
  users.users.sk = { # Username set to 'sk'
    isNormalUser = true;
    extraGroups = [
      "wheel"        # For sudo access
      "networkmanager" # For managing network connections via NetworkManager
      "video"        # Access to video devices for hardware acceleration
      "audio"        # Access to audio devices
      "docker"       # Crucial for running Docker commands as a non-root user
      "bluetooth"    # For Bluetooth functionality
      # Add other groups as needed, e.g., "input" for some specific device access
    ];
    home = "/home/sk"; # Home directory updated
    description = "SK User"; # Description updated
    # Set your password using 'mkpasswd -m sha-512' in terminal and paste the hash here:
    # initialHashedPassword = "$6$SOME_LONG_HASH_STRING_HERE";
  };

  # Allow unfree packages (often needed for some firmwares or proprietary software like Rider/VSCode)
  nixpkgs.config.allowUnfree = true;

  # Set your time zone (Hyderabad, India)
  time.timeZone = "Asia/Kolkata";

  # This value determines the NixOS release from which the default
  # settings for stateful data, like file locations and database versions
  # are chosen. It is highly recommended to set this to the primary
  # NixOS release you're running, for example, "23.11".
  system.stateVersion = "24.05"; # IMPORTANT: Set this to your current NixOS release version
}